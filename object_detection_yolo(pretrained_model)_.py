# -*- coding: utf-8 -*-
"""Object Detection YOLO(PreTrained Model) .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y-VNswntT0uQlP-dHeG2n0J1VtTv9x5R

**<h1>Object Detection on Pretrained Model<h1>**
"""

!pip install -q keras-cv

!pip install -q keras-core

import keras_cv
import keras_core as keras
import numpy as np
import requests
from PIL import Image
from io import BytesIO

url = "https://images.rawpixel.com/image_800/cHJpdmF0ZS9sci9pbWFnZXMvd2Vic2l0ZS8yMDIzLTA4L3Jhd3BpeGVsX29mZmljZV8xNV9waG90b19vZl9hX2RvZ19ydW5uaW5nX3dpdGhfb3duZXJfYXRfcGFya19lcF9mM2I3MDQyZC0zNWJlLTRlMTQtOGZhNy1kY2Q2OWQ1YzQzZjlfMi5qcGc.jpg"
response = requests.get(url)

# Check if the request was successful
if response.status_code == 200:
    # Open the image using PIL
    image = Image.open(BytesIO(response.content))

    # Convert the image to numpy array
    image_array = np.array(image)

    # Now you can resize the image and perform other operations as needed
    image_resized = keras.ops.image.resize(image_array, (640, 640))[None, ...]
else:
    print("Failed to download the image")

model = keras_cv.models.YOLOV8Detector.from_preset(
    "yolo_v8_m_pascalvoc",
    bounding_box_format="xywh",
    )
predictions = model.predict(image_resized)

class_ids = [
    "Aeroplanes",
    "Bicycle",
    "Bird",
    "Boat",
    "Bottle",
    "Bus",
    "Car",
    "Cat",
    "Chair",
    "Cow",
    "Dining Table",
    "Dog",
    "Horse",
    "Motorbike",
    "Person",
    "Potted Planet",
    "Sheep",
    "Sofa",
]
class_mapping = dict(zip(range(len(class_ids)), class_ids))

keras_cv.visualization.plot_bounding_box_gallery(
    image_resized,
    value_range=(0,255),
    rows=1,
    cols=1,
    y_pred = predictions,
    scale = 5,
    font_scale=0.7,
    bounding_box_format = 'xywh',
    class_mapping = class_mapping,
)